{"version":3,"file":"index.js","sources":["../node_modules/.pnpm/mdx-mermaid@2.0.0_mermaid@10.4.0_react@18.2.0_unist-util-visit@4.1.2/node_modules/mdx-mermaid/lib/Mermaid.mjs","../src/components/Input/index.tsx","../schemas/mermaid.ts","../src/index.ts"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\nimport mermaid from 'mermaid';\n\nconst DEFAULT_DARK_THEME = 'dark';\nconst DEFAULT_LIGHT_THEME = 'default';\nconst DARK_THEME_KEY = 'dark';\nconst LIGHT_THEME_KEY = 'light';\nconst HTML_THEME_ATTRIBUTE = 'data-theme';\n/**\n * Gets the theme based on config and current data-theme of the HTML.\n *\n * @param html The HTML element of the page.\n * @param config The configuration for this chart.\n */\nfunction getTheme(html, config) {\n    let htmlTheme = html.getAttribute(HTML_THEME_ATTRIBUTE) ?? LIGHT_THEME_KEY;\n    if (!(htmlTheme === LIGHT_THEME_KEY || htmlTheme === DARK_THEME_KEY)) {\n        htmlTheme = LIGHT_THEME_KEY;\n    }\n    const defaultTheme = htmlTheme === LIGHT_THEME_KEY\n        ? DEFAULT_LIGHT_THEME\n        : DEFAULT_DARK_THEME;\n    return config?.theme?.[htmlTheme] ??\n        config?.mermaid?.theme ??\n        defaultTheme;\n}\n\n/**\n * Copyright (c) Samuel Wall.\n *\n * This source code is licensed under the MIT license found in the\n * license file in the root directory of this source tree.\n */\n/**\n * Component to display Mermaid diagrams.\n *\n * @param param0 Diagram to display.\n * @param param1 Config.\n * @returns The component.\n */\nconst Mermaid = ({ chart, config: configSrc }) => {\n    // Mermaid doesn't support server-side rendering\n    /* istanbul ignore next */\n    if (typeof window === 'undefined') {\n        return React.createElement(\"div\", { className: \"mermaid\", \"data-mermaid-src\": chart }, chart);\n    }\n    const config = useMemo(() => typeof configSrc === 'string' ? JSON.parse(configSrc) : configSrc, [configSrc]);\n    const html = document.querySelector('html');\n    const [rerender, setRerender] = useState(false);\n    const theme = useMemo(() => getTheme(html, config), [config, rerender]);\n    useEffect(() => {\n        const observer = new MutationObserver((mutations) => {\n            for (const mutation of mutations) {\n                if (mutation.type !== 'attributes' || mutation.attributeName !== 'data-theme') {\n                    continue;\n                }\n                setRerender((cur) => !cur);\n                break;\n            }\n        });\n        observer.observe(html, { attributes: true });\n        return () => {\n            try {\n                observer.disconnect();\n            }\n            catch {\n                // Do nothing\n            }\n        };\n    }, []);\n    useEffect(() => {\n        if (config) {\n            if (config.mermaid) {\n                mermaid.initialize({ startOnLoad: true, ...config.mermaid, theme });\n            }\n            else {\n                mermaid.initialize({ startOnLoad: true, theme });\n            }\n            document.querySelectorAll('div.mermaid[data-processed=\"true\"]').forEach((v) => {\n                v.removeAttribute('data-processed');\n                v.innerHTML = v.getAttribute('data-mermaid-src');\n            });\n            mermaid.contentLoaded();\n        }\n    }, [config, theme]);\n    useEffect(() => {\n        setTimeout(mermaid.contentLoaded, 0);\n    }, [chart]);\n    return React.createElement(\"div\", { className: \"mermaid\", \"data-mermaid-src\": chart }, chart);\n};\n\nexport { Mermaid };\n","import {\n  ChangeEvent,\n  forwardRef,\n  Ref,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Mermaid } from 'mdx-mermaid/lib/Mermaid';\nimport {\n  set,\n  StringInputProps,\n  unset,\n} from 'sanity';\n\nimport {\n  Flex,\n  TextArea,\n  ThemeColorProvider,\n} from '@sanity/ui';\n\nfunction Input(props: StringInputProps, ref: Ref<HTMLTextAreaElement>) {\n  const {elementProps, onChange } = props;\n  const [value, setValue] = useState(props.value || '');\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLTextAreaElement>) => {\n      const nextValue = event.currentTarget.value;\n      setValue(nextValue);\n      onChange(nextValue\n        ? set(nextValue)\n        : unset())\n    },\n    [onChange],\n  );\n  useEffect(()=> {\n    setValue(value);\n  }, [setValue])\n\n  return (\n    <ThemeColorProvider>\n      <TextArea {...elementProps} onChange={handleChange} value={value} ref={ref} />\n      <Flex justify=\"center\" height=\"fill\">\n        <Mermaid key={value} chart={value} />\n      </Flex>\n    </ThemeColorProvider>\n  )\n}\nconst WrappedInput = forwardRef(Input);\nexport default WrappedInput;","import {\n  defineField,\n  defineType,\n} from 'sanity';\n\nimport Input from '../src/components/Input';\n\nexport default defineType({\n  title: 'Mermaid graph',\n  name: 'mermaid',\n  type: 'object',\n  fields: [\n    defineField({\n      type: 'text',\n      name: 'definition',\n      title: 'Graph definition',\n      rows: 200,\n      components: {\n        input: Input,\n      },\n    }),\n  ],\n})\n","import { definePlugin } from 'sanity';\n\nimport mermaidSchema from '../schemas/mermaid';\n\ninterface mermaidConfig {\n  /* nothing here yet */\n}\n\n/**\n * Usage in `sanity.config.ts` (or .js)\n *\n * ```ts\n * import {defineConfig} from 'sanity'\n * import {myPlugin} from 'sanity-plugin-mermaid'\n *\n * export default defineConfig({\n *   // ...\n *   plugins: [myPlugin()],\n * })\n * ```\n */\nexport const mermaid = definePlugin<mermaidConfig | void>((config = {}) => {\n  return {\n    name: 'sanity-plugin-mermaid',\n    schema: {\n      types: [mermaidSchema],\n    },\n  }\n})\n"],"names":["DEFAULT_DARK_THEME","DEFAULT_LIGHT_THEME","DARK_THEME_KEY","LIGHT_THEME_KEY","HTML_THEME_ATTRIBUTE","getTheme","html","config","_html$getAttribute","_ref","_config$theme$htmlThe","_config$theme","_config$mermaid","htmlTheme","getAttribute","defaultTheme","theme","mermaid","Mermaid","_ref2","chart","configSrc","window","React","default","createElement","className","useMemo","JSON","parse","document","querySelector","rerender","setRerender","useState","useEffect","observer","MutationObserver","mutations","mutation","type","attributeName","cur","observe","attributes","disconnect","initialize","startOnLoad","querySelectorAll","forEach","v","removeAttribute","innerHTML","contentLoaded","setTimeout","Input","props","ref","elementProps","onChange","value","setValue","handleChange","useCallback","event","nextValue","currentTarget","set","unset","ThemeColorProvider","children","jsx","TextArea","Flex","justify","height","WrappedInput","forwardRef","mermaidSchema","defineType","title","name","fields","defineField","rows","components","input","definePlugin","arguments","length","undefined","schema","types"],"mappings":"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","x_google_ignoreList":[0]}